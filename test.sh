##################################################
## 画面の初期表示情報
##   lnSeed[]に初期表示情報を格納する
##################################################
function initDispInfo(){

	declare -a -g lnSeed=() ##0から25までの26要素用意するつもり。

	#初期状態 0000000001111111111222222222233333333334444444444555555555566666666667777777777888888888899999999990
	#文字数   1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
	lnSeed+=('+--+------------------------------------------------------------++------------+----------+---------+') #00
	lnSeed+=('|//|000000000111111111122222222223333333333444444444455555555556||Wriggle     |Bug       |Fighter  |') #01
	lnSeed+=('|//|123456789012345678901234567890123456789012345678901234567890|+--+---------+----------+---------+') #02
	lnSeed+=('+--+------------------------------------------------------------+|HP| 100/ 100|BLv: 1=     0/    10|') #03
	lnSeed+=('|01|000000000000000000000000000000000000000000000000000000000000||MP| 100/ 100|JLv: 1=     0/    10|') #04
	lnSeed+=('|02|000000000000000000000000000000000000000000000000000000000000|+--+--+--+--++-+--++--+--+--+--+--+') #05
	lnSeed+=('|03|000000000000000000000000000000000000000000000000000000000000||✝|💊|💤|❔|🔇|👓||💪|🛡|🔯|🏃|🍀|') #06
	lnSeed+=('|04|000000000000000000000000000000000000000000000000000000000000|+--+--+--+--+--+--++--+--+--+--+--+') #07
	lnSeed+=('|05|000000000000000000000000000000000000000000000000000000000000|| 0| 0| 0| 0| 0| 0|| 0| 0| 0| 0| 0|') #08
	lnSeed+=('|06|000000000000000000000000000000000000000000000000000000000000|+--+--+--+--+--+--++--+--+--+--+--+') #09
	lnSeed+=('|07|000000000000000000000000000000000000000000000000000000000000||  VAL - STS - PAR |🔨|⛰|💧|🔥|🌪|') #10
	lnSeed+=('|08|000000000000000000000000000000000000000000000000000000000000||*  10 < Str > Atk |10|10|10|10|10|') #11
	lnSeed+=('|09|000000000000000000000000000000000000000000000000000000000000||   10 < Int > Mat |10|10|10|10|10|') #12
	lnSeed+=('|10|000000000000000000000000000000000000000000000000000000000000||   10 < Vit > Def |10|10|10|10|10|') #13
	lnSeed+=('|11|000000000000000000000000000000000000000000000000000000000000||   10 < Mnd > Mdf |10|10|10|10|10|') #14
	lnSeed+=('|12|000000000000000000000000000000000000000000000000000000000000||   10 < Snc > XBns| 1  %+==+=====+') #15
	lnSeed+=('|13|000000000000000000000000000000000000000000000000000000000000||   10 < Dex > Hit |10  %|Jw|    0|') #16
	lnSeed+=('|14|000000000000000000000000000000000000000000000000000000000000||   10 < Agi > Flee|10  %|Gd|    0|') #17
	lnSeed+=('|15|000000000000000000000000000000000000000000000000000000000000||   10 < Luk > Cri |10  %|Sv|   50|') #18
	lnSeed+=('+==+============================================================++==================+=====+==+=====+') #19
	lnSeed+=('|91|                                                                                               |') #20
	lnSeed+=('|92|                                                                                               |') #21
	lnSeed+=('|93|                                                                                               |') #22
	lnSeed+=('|94|                                                                                               |') #23
	lnSeed+=('|95|                                                                                               |') #24
	lnSeed+=('+--+-------------------------------------------------------------------------input "??" to help.---+') #25
}

##################################################
## コマンドヘルプ
##   termcapによって上にかぶせる
##################################################
function viewHelp(){

	inKey=""

	tput smcup

	clear
	echo "***Command List***  Press [c]key to exit."
	echo ""
	echo "mn [CMD]    : CommandManual"
	echo "mv [n]      : Move"
	echo "ki [n]      : Kick"
	echo "wp [m][n]   : Attack with [m]Wapon"
	echo "ct [m][n]   : Cast [m]Magic"
	echo "in [n]      : Inspect"
	echo "gt [n]      : Get"
	echo "tr [m][n]   : Throw [m]Item"
	echo "tk [n]      : Talk"
	echo "pr          : Pray"
	echo "cc          : Cancel"
	echo "ss          : Suiside!"

	while :
	do
		getChrH
		if [ "$inKey" = "c" ]; then
			tput rmcup
			break
		else
			echo "$inKey is invalid. press [c] to exit."
		fi
	done

}

##################################################
## MNコマンド
##   引数で受け取ったコマンドのManualを表示する
##################################################
function mnCmd(){
	echo "manCmd"
	read inKey
}

##################################################
## 画面の全情報を更新表示
##   lnSeed[]で画面を更新する
##################################################
function dispAll(){
	clear
	for ((i = 0; i < ${#lnSeed[*]}; i++)) {
		echo "${lnSeed[i]}"
	}
}

##################################################
##getCntSingleWidth
## 与えられた文字列が、半角文字相当で何文字分に当たるか判定する。
## マルチバイト文字を2、それ以外を1としたいがよくわからないので、可能そうな記号のみ
## $1:カウント対象の文字
##################################################
function getCntSingleWidth(){

	local declare cntStr="$1"

	#半角英数記号以外の文字以外を消す=半角文字数
	local declare cntS=$(echo -n "$cntStr" | sed -e 's@[^A-Za-z0-9~!@#$%&_=:;><,\*+.?{}()\ -\|]@@g' | wc -m)

	#半角英数記号の文字を消す=全角文字数
	local declare cntW=$(echo -n "$cntStr" | sed -e 's@[A-Za-z0-9~!@#$%&_=:;><,\*+.?{}()\ -\|]@@g' | wc -m)

	#全角文字数を示すcntWは二倍して、2つを足す
	echo -n "$(($((cntW * 2))+cntS))"

}

##################################################
## 使用頻度が高い障害文字を置換するためのもの。
## 【できれば必須呼び出しにしたいがどうするか】
## ・半角カタカナは全角カタカナにする。
## ・「…(三点リーダ)」の表示が詰まってしまうことがあるため、「...」(ピリオド3つ)にする
## ・「[」「]」はbashでブラケットとして判断されるためそれぞれ「［」「］」へ置換する。
## ・全角スペースは半角スペース2つへ置換する。
## ・タブは半角スペース2つへ置換する。
## ・ハイフンに似たいくつかの半角文字を半角ハイフンに置換する。
## 返却は標準出力
## $1:入力文字
##################################################
function crrctStr(){
	local declare cnvstr="$1"

	cnvstr=$(echo "$cnvstr" | nkf)       #半角カナ
	cnvstr=${cnvstr//'['/'［'}		#[
	cnvstr=${cnvstr//']'/'］'}		#]
	cnvstr=${cnvstr//'…'/'...'}	   #三点リーダ
	cnvstr=${cnvstr//'　'/'  '}		#全角sp
	cnvstr=${cnvstr//'	'/'  '}		#タブ文字
	cnvstr=${cnvstr//'-'/'-'}		#ハイフンに似た文字
	cnvstr=${cnvstr//'‑'/'-'}		#ハイフンに似た文字
	cnvstr=${cnvstr//'–'/'-'}		#ハイフンに似た文字
	cnvstr=${cnvstr//'—'/'-'}		#ハイフンに似た文字
	cnvstr=${cnvstr//'—'/'-'}		#ハイフンに似た文字
	cnvstr=${cnvstr//'ｰ'/'-'}		#ハイフンに似た文字

	echo "$cnvstr"
}

##################################################
## メッセージウィンドウの表示情報を変更する
##   表示内容を変えるだけで表示の更新はしない
##   カウント前に、crctStrで不正文字を近い文字に置換する
##   $1 メッセージウィンドウの何行目か
##   $2 メッセージウィンドウ$1行目の何文字目からか
##   $3 表示する文字
##################################################
function modMsg(){

	declare -i  tgtRow=$1
	declare -i tgtClmn=$(($2+4))
	declare     tgtStr=$(crrctStr "$3")

	declare leftStr="${lnSeed[19+$tgtRow]:0:$tgtClmn}"

	declare -i spCnt=$((99-$(getCntSingleWidth "$leftStr$tgtStr")))
	#getCntSingleWidth()で半角相当の文字数をカウント
	#100文字-|1文字=99、-文字数でSPACEの反復数

	lnSeed[19+$tgtRow]="$leftStr$tgtStr`printf %${spCnt}s`|"

}

###########################################
##getChrV
## 任意の文字数入力受付(エコーバックあり)。
## mainで定義しているグローバルinKeyをクリアしてから、入力値で上書き
###########################################
function getChrV(){
	inKey=""
	read inKey
}

###########################################=
##getChrH
## なんか1文字の入力受付(エコーバックなし)。
## mainで定義しているグローバルinKeyをクリアしてから、入力値で上書き
###########################################
function getChrH(){
	inKey=""
	read -s -n 1 inKey
}

###########################################
##Main
## どうにかします
###########################################

	declare -g inKey=""

	initDispInfo
	modMsg 1 0 "Input Commoand. >"
	dispAll	
	tput cup 20 22

	getChrV
	case "$inKey" in
		"ci" )	modMsg 2 0 "チルノ[ＯＨ，リグル、１回,し んででな　おし	てこいﾊﾞｰｶ.wWw…💀]"
				break;;
		"??" )	viewHelp
				break;;
		* ) 	modMsg 2 0 "[$inKey]is invalid." ;;
	esac
	dispAll

	tput sc
	tput cup 20 22
	echo -n $inKey
	tput rc
